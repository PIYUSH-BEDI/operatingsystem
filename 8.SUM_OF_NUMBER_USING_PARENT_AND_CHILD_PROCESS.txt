#include <stdio.h>
#include <stdlib.h>
#include <sys/types.h>
#include <sys/wait.h>
#include <unistd.h>

int main()
{
        int i;
        pid_t pid = fork();
        int arr[10]={1,2,3,4,5,6,7,8,9,10},sumodd=0,sumeven=0;
        if ( pid == 0 )
        {
                printf("Child => PPID: %d PID: %d\n", getppid(), getpid());
                for(i = 0; i < 10; i += 1)
                {
                        if( arr[i]%2 == 0)
                        {
                                sumeven+= arr[i];
                        }
                }
                printf("Sum of even series : %d\n", sumeven);
                exit(EXIT_SUCCESS);
        }
        else if ( pid > 0 )
        {
                printf("Parent => PID: %d\n", getpid());
                printf("Waiting for child process to finish.\n");
                wait(NULL);
                printf("Child process finished.\n");
                for(i = 0; i < 10; i += 1)
                {
                        if( arr[i]%2 != 0)
                        {
                                sumodd+= arr[i];
                        }
                }
                printf("Sum of odd series : %d\n", sumodd);
        }
        else
        {
                printf("Unable to create child process. \n");
        }
        return EXIT_SUCCESS;
}